{"version":3,"sources":["webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/views/cVentas.vue?ceb8","webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack:///./node_modules/chart.js/dist/chart.esm.js","webpack:///src/views/cVentas.vue","webpack:///./src/views/cVentas.vue?abf8","webpack:///./src/views/cVentas.vue","webpack:///./node_modules/core-js/internals/is-array.js"],"names":["global","isArray","isConstructor","isObject","wellKnownSymbol","SPECIES","Array","module","exports","originalArray","C","constructor","prototype","undefined","fails","V8_VERSION","METHOD_NAME","array","foo","Boolean","arraySpeciesConstructor","length","bind","uncurryThis","IndexedObject","toObject","lengthOfArrayLike","arraySpeciesCreate","push","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","$this","callbackfn","that","specificCreate","value","result","O","self","boundFunction","index","create","target","forEach","map","filter","some","every","find","findIndex","filterReject","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","proto","forced","this","arguments","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","staticRenderFns","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","type","Object","toString","substr","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","sqrt","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","m","d","easeInOutBounce","0","1","2","3","4","5","6","7","8","9","A","B","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","N","M","L","K","G","H","I","J","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","assign","fromObject","input","functionParse","Color","_rgb","_valid","color","weight","me","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","overrides","getScope$1","node","split","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","set","Set","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","_keys","_cached","_resolveWithPrefixes","Reflect","getOwnPropertyDescriptor","getPrototypeOf","getKeysFromAllScopes","includes","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","ownKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","descriptors","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","_duration","cancel","animator","interpolators","to","factor","c0","valid","mix","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","numbers","colors","properties","active","resize","show","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","_animateOptions","update","anim","wait","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","passive","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","getPlugin","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","addRectPath","WeakMap","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","leftForLtr","multiKeyBackground","outerX","innerX","xPlus","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","labelCount","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","valores","meses","totales","methods","listar","token","headers","axios","catch","graficar","mesn","yAxes","mounted","classof","argument"],"mappings":"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","file":"js/chunk-ec26cbf0.ad7eaab9.js","sourcesContent":["var global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"grid-list-m\":\"\"}},[_c('v-row',{attrs:{\"wrap\":\"\"}},[_c('v-col',{attrs:{\"xs12\":\"\",\"sm12\":\"\",\"md12\":\"\"}},[_c('div',{staticClass:\"ct-chart\"},[_c('canvas',{attrs:{\"id\":\"myChart\"}})])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<template>\r\n  <v-container grid-list-m>\r\n    <v-row wrap>\r\n      <v-col xs12 sm12 md12>\r\n        <div class=\"ct-chart\">\r\n          <canvas id=\"myChart\">                                                \r\n          </canvas>\r\n        </div>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Chart from 'chart.js'\r\nexport default {\r\n  data(){\r\n    return {\r\n      valores:[],\r\n      meses:[],\r\n      totales:[]\r\n    }\r\n  },\r\n  methods:{\r\n    listar(){\r\n      let me=this;\r\n      let token = { token: this.$store.state.token };\r\n      let header = { headers: token };            \r\n      this.axios.get('venta/get-grafico-venta',header).then(function (response){\r\n          me.valores=response.data;\r\n          me.graficar();\r\n      }).catch(function(e){\r\n          console.log(e);\r\n      });\r\n    },\r\n    graficar(){\r\n      let me=this;\r\n      let mesn='';\r\n      me.valores.map(function(x){\r\n        switch(parseInt(x._id.mes)){\r\n          case 1:\r\n            mesn='Enero';\r\n            break;\r\n          case 2:\r\n            mesn='Febrero';\r\n            break;\r\n          case 3:\r\n            mesn='Marzo';\r\n            break;\r\n          case 4:\r\n            mesn='Abril';\r\n            break;\r\n          case 5:\r\n            mesn='Mayo';\r\n            break;\r\n          case 6:\r\n            mesn='Junio';\r\n            break;\r\n          case 7:\r\n            mesn='Julio';\r\n            break;\r\n          case 8:\r\n            mesn='Agosto';\r\n            break;\r\n          case 9:\r\n            mesn='Setiembre';\r\n            break;\r\n          case 10:\r\n            mesn='Octubre';\r\n            break;\r\n          case 11:\r\n            mesn='Noviembre';\r\n            break;\r\n          case 12:\r\n            mesn='Diciembre';\r\n            break;\r\n          default:\r\n            mesn='error'\r\n        }\r\n               \r\n        me.meses.push(mesn+'-'+x._id.year);\r\n        me.totales.push(x.total);\r\n      });\r\n      var ctx = document.getElementById('myChart');\r\n      var myChart = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n              labels: me.meses,\r\n              datasets: [{\r\n                  label: 'Ventas de los últimos 12 meses',\r\n                  data: me.totales,\r\n                  backgroundColor: [\r\n                      'rgba(255, 99, 132, 0.2)',\r\n                      'rgba(54, 162, 235, 0.2)',\r\n                      'rgba(255, 206, 86, 0.2)',\r\n                      'rgba(75, 192, 192, 0.2)',\r\n                      'rgba(153, 102, 255, 0.2)',\r\n                      'rgba(255, 159, 64, 0.2)',\r\n                      'rgba(255, 99, 132, 0.2)',\r\n                      'rgba(54, 162, 235, 0.2)',\r\n                      'rgba(255, 206, 86, 0.2)',\r\n                      'rgba(75, 192, 192, 0.2)',\r\n                      'rgba(153, 102, 255, 0.2)',\r\n                      'rgba(255, 159, 64, 0.2)'\r\n                  ],\r\n                  borderColor: [\r\n                      'rgba(255, 99, 132, 1)',\r\n                      'rgba(54, 162, 235, 1)',\r\n                      'rgba(255, 206, 86, 1)',\r\n                      'rgba(75, 192, 192, 1)',\r\n                      'rgba(153, 102, 255, 1)',\r\n                      'rgba(255, 159, 64, 1)',\r\n                      'rgba(255, 99, 132, 1)',\r\n                      'rgba(54, 162, 235, 1)',\r\n                      'rgba(255, 206, 86, 1)',\r\n                      'rgba(75, 192, 192, 1)',\r\n                      'rgba(153, 102, 255, 1)',\r\n                      'rgba(255, 159, 64, 1)'\r\n                  ],\r\n                  borderWidth: 1\r\n              }]\r\n          },\r\n          options: {\r\n              scales: {\r\n                  yAxes: [{\r\n                      ticks: {\r\n                          beginAtZero: true\r\n                      }\r\n                  }]\r\n              }\r\n          }\r\n      });\r\n    }\r\n\r\n  },\r\n  mounted(){\r\n    this.listar();\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cVentas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cVentas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cVentas.vue?vue&type=template&id=7f36c10a&\"\nimport script from \"./cVentas.vue?vue&type=script&lang=js&\"\nexport * from \"./cVentas.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n"],"sourceRoot":""}